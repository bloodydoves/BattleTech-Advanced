{
	"GeneratedSettingsFilesReadonlyDescription": "If true, generated last and default settings files are set to readonly, to indicate that those are not intended to be edited.",
	"GeneratedSettingsFilesReadonly": false,
	"ArmActuator": {
		"DescriptionTemplate": "<color=#53ff1a><b>Arm Actuator Limit</b>: <b>{0}</b> on left and <b>{1}</b> on right</color>\r\n",
		"CustomDescriptionTemplate": "<color=#00cc44><b>Arm Actuator Limit</b>: <b>{0}</b></color>\r\n"
	},
	"AccuracyEffects": {
		"Enabled": true,
		"EnabledDescription": "Enables statistic effects for arm accuracy.",
		"CombatHUDTooltipName": "WEAPON MOUNT",
		"CombatHUDTooltipNameDescription": "The name to call the ARM MOUNTED accuracy bonus in the combat tooltips."
	},
	"ArmorStructureChanges": {
		"Enabled": true
	},
	"ArmorStructureRatio": {
		"Enabled": false
	},
	"ArmorMaximizer": {
		"Enabled": true,
		"StripBeforeMax": false,
		"StepSize": {
			"Alt": 25,
			"Control": null,
			"Shift": 1,
			"Default": 0.5
		},
		"StepPrecision": {
			"Alt": 1,
			"Control": 999,
			"Shift": 1,
			"Default": 5
		}
	},
	"AutoFixer": {
		"Enabled": true,
		"MechDefEngine": true,
		"MechTagsAutoFixEnabled": [],
		"MechDefHeatBlockDef": "emod_engine_cooling",
		"MechDefCoreDummy": "emod_engine_dummy",
		"InternalizeHeatSinksOnValidEngines": false,
		"MechLocationNamingTemplates": [
			{
				"Tags": [
					"fake_vehicle_chassis"
				],
				"Template": {
					"Names": [
						{
							"Location": "LeftArm",
							"Label": "FRONT",
							"ShortLabel": "F"
						},
						{
							"Location": "RightArm",
							"Label": "REAR",
							"ShortLabel": "R"
						},
						{
							"Location": "LeftLeg",
							"Label": "LEFT SIDE",
							"ShortLabel": "LS"
						},
						{
							"Location": "RightLeg",
							"Label": "RIGHT SIDE",
							"ShortLabel": "RS"
						},
						{
							"Location": "Head",
							"Label": "TURRET",
							"ShortLabel": "T"
						}
					]
				}
			},
			{
				"Tags": [
					"QuadMech"
				],
				"Template": {
					"Names": [
						{
							"Location": "LeftArm",
							"Label": "Front Left Leg",
							"ShortLabel": "FL"
						},
						{
							"Location": "RightArm",
							"Label": "Front Right Leg",
							"ShortLabel": "RL"
						},
						{
							"Location": "LeftLeg",
							"Label": "Hind Left Leg",
							"ShortLabel": "HL"
						},
						{
							"Location": "RightLeg",
							"Label": "Hind Right Leg",
							"ShortLabel": "HR"
						}
					]
				}
			},
			{
				"Tags": [
					"ProtoMech"
				],
				"Template": {
					"Names": [
						{
							"Location": "LeftArm",
							"Label": "Trooper 5",
							"ShortLabel": "5"
						},
						{
							"Location": "RightArm",
							"Label": "Trooper 6",
							"ShortLabel": "6"
						},
						{
							"Location": "LeftLeg",
							"Label": "Trooper 7",
							"ShortLabel": "7"
						},
						{
							"Location": "RightLeg",
							"Label": "Trooper 8",
							"ShortLabel": "8"
						},
						{
							"Location": "CenterTorso",
							"Label": "Trooper 2",
							"ShortLabel": "2"
						},
						{
							"Location": "RightTorso",
							"Label": "Trooper 4",
							"ShortLabel": "4"
						},
						{
							"Location": "LeftTorso",
							"Label": "Trooper 3",
							"ShortLabel": "3"
						},
						{
							"Location": "Head",
							"Label": "Trooper 1",
							"ShortLabel": "1"
						}
					]
				}
			}
		],
		"UpgradeDefSkip": [
			"Gear_Cockpit_SLDF_Custom",
			"Gear_Cockpit_Generic_Small",
			"Gear_Cockpit_Generic_Standard",
			"Gear_Cockpit_LifeSupportA_Standard",
			"Gear_Cockpit_LifeSupportB_Standard",
			"Gear_Cockpit_SensorsA_Standard",
			"Gear_Cockpit_SensorsB_Standard",
			"Gear_Gyro_Generic_Standard",
			"emod_arm_part_shoulder",
			"emod_arm_part_upper",
			"emod_arm_part_lower",
			"emod_arm_part_hand",
			"emod_leg_hip",
			"emod_leg_upper",
			"emod_leg_lower",
			"emod_leg_foot",
			"Gear_Spikes",
			"Quad_Front_leg_hip",
			"Quad_Front_leg_upper",
			"Quad_Front_leg_lower",
			"Quad_Front_leg_foot",
			"Quad_Hind_leg_hip",
			"Quad_Hind_leg_upper",
			"Quad_Hind_leg_lower",
			"Quad_Hind_leg_foot"
		],
		"GyroCategorizer": null,
		"GyroSlotChange": null,
		"CockpitCategorizer": null,
		"CockpitTonnageChange": null,
		"CockpitSlotChange": null,
		"SensorsACategorizer": null,
		"SensorsBCategorizer": null,
		"SensorsBSlotChange": null,
		"LegUpgradesCategorizer": null,
		"LegUpgradesSlotChange": null,
		"ChassisDefSlotsChanges": null,
		"ChassisDefInitialTonnage": false,
		"ChassisDefInitialToTotalTonnageFactor": 0.1,
		"ChassisDefArmorStructureRatio": true,
		"ChassisDefMaxJumpjets": false,
		"ChassisDefMaxJumpjetsCount": 100,
		"ChassisDefMaxJumpjetsRating": 400,
		"AutoFixWeaponDefSplitting": true,
		"AutoFixWeaponDefSplittingLargerThan": 8,
		"AutoFixWeaponDefSplittingFixedSize": 8,
		"AutoFixWeaponDefSplittingDynamicSlotTemplate": {
			"ReservedSlots": 0,
			"InnerAdjacentOnly": true,
			"ShowIcon": false,
			"ShowFixedEquipmentOverlay": true,
			"NameText": "",
			"DefaultBonusATextIfReservedSlot": "reserved slot",
			"DefaultBonusATextIfMovableSlot": "movable slot",
			"BonusBText": "",
			"BackgroundColor": null
		},
		"AutoFixWeaponDefSlotsChanges": []
	},
	"ComponentExplosions": {
		"Enabled": true,
		"EnabledDescription": "Allows each component to define destructive forces in case they explode, also implements proper CASE.",
		"PassthroughHeadToCenterTorso" : false
	},
	"CompressFloatieMessages": {
		"Enabled": true,
		"EnabledDescription": "Compresses similar floatie messages to a single message with a multiplier. E.g. MEDIUM LASER DESTROYED x 4"
	},
	"CriticalEffects": {
		"Enabled": true,
		"ShowComponentFloatie": true,
		"DefaultMaxCritsPerSlots": 0,
		"DefaultMaxCritsPerSlotsDescription": "How many critical hits a component by default can take for each occupied slot. For CBT use 0, for Expanded Critical Damage behavior use 0.5. Custom CriticalEffects overwrite this behavior.",
		"DefaultMaxCritsComponentTypes": [
			"Weapon",
			"JumpJet",
			"Upgrade"
		],
		"DefaultMaxCritsComponentTypesDescription": "For which types the default max crits are applied.",
		"DescriptionEnabled": true,
		"DescriptionIdentifier": "Criticals",
		"DescriptionTemplate": "Critical Effects:<b><color=#F79B26FF>\r\n{{elements}}</color></b>\r\n",
		"ElementTemplate": " <indent=10%><line-indent=-5%><line-height=65%>{{element}}</line-height></line-indent></indent>\r\n",
		"DescriptionUseName": false,
		"CritFloatieMessage": "{0} CRIT",
		"DestroyedFloatieMessage": "{0} DESTROYED",
		"CritHitText": "HIT {0}: {1}",
		"CritDestroyedText": "DESTROYED: {0}",
		"CritDestroyedDeathText": "DESTROYED: Unit is incapacitated, reason is {0}",
		"CritLinkedText": "Critical hits are linked to '{0}'"
	},
	"CustomCapacities": {
		"Enabled": true,
		"EnabledDescription": "Enables some carry rules.",
		"CarryLeftOverTopOffDescription": "Non CBT mechanism. The value is multiplied by the chassis tonnage. Carry in hand might have left overs, `top off` - `carry in hand usage` = `carry left over capacity`. Modifiable via custom capacity collection 'CarryLeftOverTopOff'.",
		"CarryLeftOverTopOff": 0,
		"CarryHandErrorOneFreeHand": "OVERWEIGHT: 'Mechs handheld carry weight requires one free hand.",
		"CarryWeight": {
			"Description": {
				"Id": "CarryInHand",
				"Name": "Carry Weight",
				"Details": "Carry weight represents the total carry capacity of a 'Mech on top of the normal chassis weight internal capacity. Each hand actuator allows to carry an equivalent of up to 5% chassis maximum tonnage. If a melee weapon is too heavy for a single arm, it can be held two-handed by combining both hands carry capacities.",
				"Icon": "UixSvgIcon_specialEquip_Melee"
			},
			"Format": "{0:0.#} / {1:0.#}",
			"ErrorOverweight": "OVERWEIGHT: This 'Mechs total carry weight exceeds maximum",
			"HideIfNoUsageAndCapacity": true
		},
		"HeatSink": {
			"Description": {
				"Id": "HeatSink",
				"Name": "Heat Sinks",
				"Details": "A 'Mechs engine requires at least 10 heat sinks, which are usually provided by the engine itself. Engine cores with a rating lower than 250 need supplementary heat sinks installed elsewhere on the 'Mech.",
				"Icon": "uixSvgIcon_equipment_Heatsink"
			},
			"Format": "{1:0} / {0:0}",
			"ErrorOverweight": "HEAT SINKS: This 'Mech does not have the minimum amount of heat sinks",
			"HideIfNoUsageAndCapacity": true
		},
		"HeatSinkEngineAdditional": {
			"Description": {
				"Id": "HeatSinkEngineAdditional",
				"Name": "Additional Engine Heat Sinks",
				"Details": "If a 'Mechs engine rating is at or above 275, additional heat sinks can directly be installed within the engine without using up criticals on the 'Mech.",
				"Icon": "uixSvgIcon_equipment_Heatsink"
			},
			"Format": "E {0:0} / {1:0}",
			"ErrorOverweight": "HEAT SINKS: This 'Mech has exceeded the amount of heat sinks the engine can be fitted with",
			"HideIfNoUsageAndCapacity": true
		}
	},
	"DynamicSlots": {
		"Enabled": true,
		"EnabledDescription": "Allows components to take up space dynamically on a mech.",
		"DynamicSlotsValidateDropEnabledDescription": "Don't allow dropping of items that would exceed the available slots.",
		"DynamicSlotsValidateDropEnabled": true,
		"LocationPriorityOrder": [
			"CenterTorso",
			"Head",
			"LeftTorso",
			"LeftLeg",
			"RightTorso",
			"RightLeg",
			"LeftArm",
			"RightArm"
		],
		"LocationPriorityOrderDescription": "From highest to lowest priority where to add dynamic slots too, relevant if locations have same amount of free slots. Visual impact only."
	},
	"Engine": {
		"Enabled": true,
		"EnabledDescription": "Provides engines that can be installed on mechs similar to how CBT works.",
		"CBTWalkAndRunMPRoundingDescription": "If true, walking MPs are rounded down and running MPs are rounded up.",
		"AdditionalWalkSpeedDescription": "Additional max walk distance regardless of any installed engine.",
		"AdditionalRunSpeedDescription": "Additional max run distance regardless of any installed engine.",
		"MovementPointDistanceMultiplierDescription": "The distance of a TT movement point, 24 is vanilla CombatGameConstants.ExperimentalGridDistance .",
		"MinimJumpHeatDescription": "Minimum heat when doing a jump, even if only one jump jet exists and only when jumping one hex.",
		"JumpJetDefaultJumpHeatDescription": "The heat the jump jet produces when fully* used (* jumping below max distance reduces produced heat). Can be adjusted using the JumpHeat statistic.",
		"RunMultiplierDescription": "How much faster running is than walking.",
		"EngineRatingForChassisMovementStatDescription": "The engine rating to use when evaluating the movement stat of a mech.",
		"AllowMountingAllRatings": false,
		"AllowMountingAllRatingsDescription": "Allow mounting all fusion core rating regardless of min/max sprint factors.",
		"MinimumHeatSinksOnMech": 10,
		"MinimumHeatSinksOnMechDescription": "Minimum heatsinks a mech requires.",
		"EnforceRulesForAdditionalInternalHeatSinks": true,
		"EnforceRulesForAdditionalInternalHeatSinksDescription": "Can't have those juicy ++ cooling systems with smaller fusion cores than the rules allow it.",
		"KeepIncompatibleHeatSinks": false,
		"KeepIncompatibleHeatSinksDescription": "Replace incompatible heat sinks with compatible ones.",
		"EngineMissingFallbackHeatSinkCapacity": 30,
		"EngineMissingFallbackHeatSinkCapacityDescription": "Heat sink capacity if no engine is detected.",
		"AdditionalWalkSpeed": 0,
		"AdditionalRunSpeed": 0,
		"MovementPointDistanceMultiplier": 30,
		"MinimJumpHeat": 9,
		"JumpJetDefaultJumpHeat": 3,
		"RunMultiplier": 1.5,
		"EngineRatingForChassisMovementStat": 250,
		"LimitEngineCoresToTonnage": true,
		"IgnoreLimitEngineChassisTag": "IgnoreEngineLimit",
		"ProtoMechEngineTag": "ProtoMech"
	},
	"Globals": {
		"Enabled": true,
		"EnabledDescription": "Allows tooltips and other features to access the current mech from context."
	},
	"HardpointFix": {
		"Enabled": true,
		"EnabledDescription": "Optimizes the way installed weapons are shown on a mech model.",
		"TraceLogDebugMappings": false,
		"TraceLogDebugMappingsDescription": "Trace all GetComponentBlankNames and GetComponentPrefabName calls. Otherwise only some of them are logged.",
		"AutoFixChassisDefWeaponHardpointCounts": false,
		"AutoFixChassisDefWeaponHardpointCountsDescription": "Changes chassis hardpoints based on configured prefabs.",
		"EnforceHardpointLimits": false,
		"EnforceHardpointLimitsDescription": "Enforces hardpoint limits in mechlab only allowing configured prefabs.",
		"AllowDefaultLoadoutWeapons": false,
		"AllowDefaultLoadoutWeaponsDescription": "Ignore limits that would prevent mounting default loadouts.",
		"FallbackPrefabsForComponentDefIds": [
			"Weapon_Mortar_MechMortar",
			"Weapon_MECHMORTAR_1",
			"Weapon_MECHMORTAR_2",
			"Weapon_MECHMORTAR_4",
			"Weapon_MECHMORTAR_8",
			"Weapon_AMS",
			"Weapon_Laser_AMS",
			"Weapon_Laser_TAG",
			"Weapon_Laser_TAGLight"
		],
		"FallbackPrefabsForComponentDefIdsDescription": "A list of components that always should be assigned a weapon prefab to.",
		"AutoFixHardpointDataDefs": true,
		"AutoFixHardpointDataDefsDescription": "HardpointDataDef should not contain duplicates and be grouped by slot (mh1 < mh2, eh1 = mh1).",
		"WeaponPrefabMappings": [
			{
				"PrefabIdentifier": "AC2",
				"HardpointCandidates": [
					"ac2",
					"ac5",
					"ac10",
					"ac20",
					"uac2",
					"rac2",
					"lbx2",
					"ac",
					"lbx",
					"ppc",
					"laser",
					"mg",
					"flamer",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "AC5",
				"HardpointCandidates": [
					"ac5",
					"uac5",
					"ac2",
					"ac10",
					"ac20",
					"ac",
					"rac5",
					"lbx5",
					"lbx",
					"ppc",
					"laser",
					"mg",
					"flamer",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "AC10",
				"HardpointCandidates": [
					"ac10",
					"lbx10",
					"ac20",
					"ac5",
					"ac2",
					"uac10",
					"ac",
					"lbx",
					"ppc",
					"laser",
					"mg",
					"flamer",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "AC20",
				"HardpointCandidates": [
					"ac20",
					"ac10",
					"ac5",
					"ac2",
					"uac20",
					"lbx10",
					"ac",
					"lbx",
					"ppc",
					"laser",
					"mg",
					"flamer",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "lbx10",
				"HardpointCandidates": [
					"lbx10",
					"lbx20",
					"lbx5",
					"lbx2",
					"ac10",
					"ac",
					"lbx",
					"ppc",
					"laser",
					"mg",
					"flamer",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "uac5",
				"HardpointCandidates": [
					"uac5",
					"uac20",
					"uac10",
					"uac2",
					"ac5",
					"ac20",
					"ac10",
					"ac2",
					"rac5",
					"lbx5",
					"ac",
					"lbx",
					"ppc",
					"laser",
					"mg",
					"flamer",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "artillery",
				"HardpointCandidates": [
					"artillery",
					"gauss",
					"ac",
					"lbx",
					"ppc",
					"ams",
					"machinegun",
					"mg",
					"narc",
					"flamer",
					"laser"
				]
			},
			{
				"PrefabIdentifier": "mortar",
				"HardpointCandidates": [
					"mortar",
					"artillery",
					"ac20",
					"ac10",
					"ac5",
					"ac2",
					"uac20",
					"lbx20",
					"narc",
					"flamer",
					"ac",
					"lbx"
				]
			},
			{
				"PrefabIdentifier": "lrm5",
				"HardpointCandidates": [
					"lrm5",
					"lrm10",
					"lrm15",
					"lrm20",
					"srm20",
					"narc",
					"arrow",
					"mml7",
					"ac",
					"gauss",
					"lbx",
					"machinegun",
					"mg",
					"ppc",
					"flamer",
					"laser",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "lrm10",
				"HardpointCandidates": [
					"lrm10",
					"lrm15",
					"lrm20",
					"srm20",
					"narc",
					"arrow",
					"mml7",
					"lrm5",
					"rl10",
					"ac",
					"gauss",
					"lbx",
					"machinegun",
					"mg",
					"ppc",
					"flamer",
					"laser",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "lrm15",
				"HardpointCandidates": [
					"lrm15",
					"lrm20",
					"srm20",
					"arrow",
					"mml7",
					"lrm10",
					"lrm5",
					"narc",
					"rl20",
					"rl15",
					"rl10",
					"ac",
					"gauss",
					"lbx",
					"machinegun",
					"mg",
					"ppc",
					"flamer",
					"laser",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "lrm20",
				"HardpointCandidates": [
					"lrm20",
					"srm20",
					"lrm15",
					"lrm10",
					"arrow",
					"mml7",
					"lrm5",
					"narc",
					"rl20",
					"rl15",
					"rl10",
					"ac",
					"gauss",
					"lbx",
					"machinegun",
					"mg",
					"ppc",
					"flamer",
					"laser",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "MachineGun",
				"HardpointCandidates": [
					"machinegun",
					"mg",
					"lmg",
					"hmg",
					"ac",
					"gauss",
					"lbx",
					"flamer",
					"laser",
					"srm20",
					"narc",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "srm2",
				"HardpointCandidates": [
					"srm2",
					"srm4",
					"srm6",
					"mml7",
					"lrm5",
					"lrm10",
					"lrm15",
					"lrm20",
					"srm20",
					"narc",
					"gauss",
					"ac",
					"machinegun",
					"mg",
					"ppc",
					"flamer",
					"laser",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "srm4",
				"HardpointCandidates": [
					"srm4",
					"srm6",
					"srm2",
					"mml7",
					"lrm5",
					"lrm10",
					"lrm15",
					"lrm20",
					"srm20",
					"narc",
					"gauss",
					"ac",
					"machinegun",
					"mg",
					"ppc",
					"flamer",
					"laser",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "srm6",
				"HardpointCandidates": [
					"srm6",
					"srm4",
					"srm2",
					"mml7",
					"lrm5",
					"lrm10",
					"lrm15",
					"lrm20",
					"srm20",
					"narc",
					"gauss",
					"ac",
					"machinegun",
					"mg",
					"ppc",
					"flamer",
					"laser",
					"gauss",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "PPC",
				"HardpointCandidates": [
					"ppc",
					"hppc",
					"lppc",
					"snppc",
					"ac20",
					"ac",
					"lbx",
					"ac10",
					"lbx10",
					"laser",
					"flamer",
					"mg",
					"srm2",
					"srm4",
					"srm6",
					"lrm5",
					"lrm10",
					"lrm15",
					"lrm20",
					"srm20",
					"narc",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "Gauss",
				"HardpointCandidates": [
					"gauss",
					"hgauss",
					"lgauss",
					"sbgauss",
					"ac20",
					"ac10",
					"ac",
					"ppc",
					"lbx",
					"laser",
					"mg",
					"flamer",
					"srm2",
					"srm4",
					"srm6",
					"lrm5",
					"lrm10",
					"lrm15",
					"lrm20",
					"srm20",
					"narc",
					"mg",
					"flamer",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "arrow",
				"HardpointCandidates": [
					"arrow",
					"lrm5",
					"lrm20",
					"srm20",
					"lrm15",
					"lrm10",
					"srm2",
					"srm4",
					"srm6",
					"narc",
					"machinegun",
					"mg",
					"flamer",
					"laser",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "AMS",
				"HardpointCandidates": [
					"ams",
					"laser",
					"mg",
					"machinegun",
					"flamer",
					"ac2",
					"ppc",
					"ac",
					"srm2",
					"srm4",
					"srm6",
					"lrm5",
					"lrm10",
					"lrm15",
					"lrm20",
					"srm20",
					"narc",
					"lbx10"
				]
			},
			{
				"PrefabIdentifier": "Flamer",
				"HardpointCandidates": [
					"flamer",
					"laser",
					"mg",
					"machinegun",
					"ac2",
					"ppc",
					"ac",
					"gauss",
					"lbx10",
					"srm2",
					"srm4",
					"srm6",
					"lrm5",
					"lrm10",
					"lrm15",
					"lrm20",
					"srm20",
					"narc",
					"ams"
				]
			},
			{
				"PrefabIdentifier": "Laser",
				"HardpointCandidates": [
					"laser",
					"flamer",
					"machinegun",
					"mg",
					"ac2",
					"ac5",
					"ac10",
					"ac20",
					"ppc",
					"ac",
					"lbx",
					"srm2",
					"srm4",
					"srm6",
					"lrm5",
					"lrm10",
					"lrm15",
					"lrm20",
					"srm20",
					"narc",
					"ams"
				]
			}
		]
	},
	"HeatSinkCapacityStat": {
		"Enabled": true,
		"EnabledDescription": "Required by the engine feature to work. Disabled the mech.GetHeatSinkDissipation method.",
		"ShutdownStatuseffectsExcludedComponentTypesDescription": "By default in CBT, heat sinks are still effective even when a mech is shut down. Heat Sink has to be part of the array or the engine will bug out once a mech is shut down.",
		"ShutdownStatusEffectsExcludedComponentTagsDescription": "Don't shut down status effects for the components having the listed tags.",
		"ShutdownStatusEffectsExcludedComponentTypes": [
			"HeatSink"
		],
		"ShutdownStatusEffectsExcludedComponentTags": [
			"ignore_shutdown"
		]
	},
	"InvalidInventory": {
		"Enabled": true,
		"EnabledDescription": "Make sure invalid mech configurations can't be saved in skirmish and can't be fielded in the campaign."
	},
	"MechLabSlots": {
		"Enabled": true,
		"HideHelpButton": true,
		"HideECMButton": true,
		"ZoomMaximumScale": 0.95,
		"MechLabStatusLeftShift": 0,
		"MechLabMechRightShift": 0,
		"MechLabArmTopPadding": 120,
		"TopLeftWidget": {
			"Enabled": true,
			"Label": "Chassis",
			"ShortLabel": "S",
			"Slots": 3
		},
		"TopRightWidget": {
			"Enabled": false,
			"Label": "Quirk",
			"ShortLabel": "Q",
			"Slots": 0
		}
	},
	"OrderedStatusEffects": {
		"Enabled": true,
		"EnabledDescription": "Orders status effects, so e.g. install order of mechComponents does not matter for additive and multiplicative effects. Affects all statistic data.",
		"OtherStatisticsRequiredDescription": "One of the listed statistics is required to be in the same statCollection, otherwise no reordering occurs.",
		"FilterStatisticsDescription": "If set, only statistics listed by name will be reordered.",
		"OrderDescription": "The order in which operations are sorted. Operations not part of the list are deemed unsortable and only sortable operations after such a unsortable operations are sorted. For Example: '* + SET / * +' =sort=> '* + SET + * /'.",
		"OtherStatisticsRequired": null,
		"FilterStatistics": [
			"HeatSinkCapacity",
			"CBTBE_Charge_Attack_Mod",
			"CBTBE_Charge_Attacker_Damage_Mod",
			"CBTBE_Charge_Attacker_Damage_Multi",
			"CBTBE_Charge_Attacker_Instability_Mod",
			"CBTBE_Charge_Attacker_Instability_Multi",
			"CBTBE_Charge_Target_Damage_Mod",
			"CBTBE_Charge_Target_Damage_Multi",
			"CBTBE_Charge_Target_Instability_Mod",
			"CBTBE_Charge_Target_Instability_Multi",
			"CBTBE_DFA_Attack_Mod",
			"CBTBE_DFA_Attacker_Damage_Mod",
			"CBTBE_DFA_Attacker_Damage_Multi",
			"CBTBE_DFA_Attacker_Instability_Mod",
			"CBTBE_DFA_Attacker_Instability_Multi",
			"CBTBE_DFA_Target_Damage_Mod",
			"CBTBE_DFA_Target_Damage_Multi",
			"CBTBE_DFA_Target_Instability_Mod",
			"CBTBE_DFA_Target_Instability_Multi",
			"CBTBE_Kick_Attack_Mod",
			"CBTBE_Kick_Extra_Hits_Count",
			"CBTBE_Kick_Target_Damage_Mod",
			"CBTBE_Kick_Target_Damage_Multi",
			"CBTBE_Kick_Target_Instability_Mod",
			"CBTBE_Kick_Target_Instability_Multi",
			"CBTBE_Punch_Attack_Mod",
			"CBTBE_Punch_Extra_Hits_Count",
			"CBTBE_Punch_Target_Damage_Per_Attacker_Ton",
			"CBTBE_Punch_Target_Instability_Per_Attacker_Ton",
			"CBTBE_Punch_Target_Damage_Mod",
			"CBTBE_Punch_Target_Damage_Multi",
			"CBTBE_Punch_Target_Instability_Mod",
			"CBTBE_Punch_Target_Instability_Multi",
			"CBTBE_Punch_Is_Physical_Weapon",
			"CBTBE_Physical_Weapon_Location_Table",
			"CBTBE_Physical_Weapon_Attack_Mod",
			"CBTBE_Physical_Weapon_Extra_Hits_Count",
			"CBTBE_Physical_Weapon_Unsteady_Attacker_On_Hit",
			"CBTBE_Physical_Weapon_Unsteady_Attacker_On_Miss",
			"CBTBE_Physical_Weapon_Unsteady_Target_On_Hit",
			"CBTBE_Physical_Weapon_Target_Damage_Per_Attacker_Ton",
			"CBTBE_Physical_Weapon_Target_Damage_Mod",
			"CBTBE_Physical_Weapon_Target_Damage_Multi",
			"CBTBE_Physical_Weapon_Target_Instability_Per_Attacker_Ton",
			"CBTBE_Physical_Weapon_Target_Instability_Mod",
			"CBTBE_Physical_Weapon_Target_Instability_Multi"
		]
	},
	"OverrideDescriptions": {
		"Enabled": true,
		"EnabledDescription": "Allows other features to override tooltips and descriptions, also provides bonus description management.",
		"DescriptionIdentifier": "Bonuses",
		"BonusDescriptionsDescriptionTemplate": "Traits:<b><color=#F79B26FF>\r\n{{elements}}</color></b>\r\n",
		"BonusDescriptionsElementTemplate": " <indent=10%><line-indent=-5%><line-height=65%>{{element}}</line-height></line-indent></indent>\r\n"
	},
	"OverrideGhostVFX": {
		"Enabled": false,
		"Blacklisted": [],
		"BlipWeak": "Weak",
		"BlipStrong": "Weak"
	},
	"OverrideTonnage": {
		"Enabled": true,
		"EnabledDescription": "Allows other features to override tonnage calculations.",
		"PrecisionEpsilon": 0.001,
		"PrecisionEpsilonDescription": "The maximum tonnage two values can be apart to be viewed as being the same, vanilla uses 100 grams.",
		"TonnageStandardPrecision": 0.5,
		"TonnageStandardPrecisionDescription": "Set to 0.001 for kg fractional accounting on BattleMechs, only modifies half-ton rounding operations as by rule",
		"KilogramStandardPrecision": 0.001,
		"KilogramStandardPrecisionDescription": "Used for Small Support Vehicles, ProtoMechs and battlesuits.",
		"ArmorRoundingPrecision": 0.0125,
		"ArmorRoundingPrecisionDescription": "If not set, default is ARMOR_PER_STEP * TONNAGE_PER_ARMOR_POINT",
		"UnderweightWarningThreshold": 0.5,
		"UnderweightWarningThresholdDescription": "How many tons a mech has to be underweight to show a warning",
		"WeightsDefaultBonusSlot": null
	},
	"ShutdownInjuryProtection": {
		"Enabled": true,
		"EnabledDescription": "Pilots receive injury when mech receives overheat damage or has to shut down in case life support is destroyed.",
		"HeatDamageInjuryEnabled": true,
		"ShutdownInjuryEnabled": false
	},
	"TurretLimitedAmmo": {
		"Enabled": true,
		"EnabledDescription": "Turrets use up ammo and don't explode once ammo is gone."
	},
	"TurretMechComponents": {
		"Enabled": true,
		"EnabledDescription": "Turrets can now use components and benefit from their status effects."
	},
	"DebugSaveMechToFile": {
		"Enabled": false,
		"EnabledDescription": "Saves mechdefs to 'MechEngineer/Saves' when saving a mech in the mechlab"
	},
	"DebugScreenshotMechs": {
		"Enabled": false,
		"EnabledDescription": "Edit a mech then cancel, it then will go through all mechs and make screenshots for them. To improve loading times use the TagManager to blacklist all components so the MechLab doesn't have to load them.",
		"ScreenshotDirectoryPath": "Screenshots",
		"OnlyInvalidMechs": true,
		"ScreenshotDirectoryPathDescription": "Create the directory manually first, otherwise it won't save any of the images.",
		"OnlyInvalidMechsDescription": "Only make screenshots of mechs with invalid configurations."
	}
}